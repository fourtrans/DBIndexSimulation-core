Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    KEYWORD

Grammar

Rule 0     S' -> sql_stam
Rule 1     sql_stam -> select_stam
Rule 2     sql_stam -> insert_stam
Rule 3     sql_stam -> update_stam
Rule 4     sql_stam -> delete_stam
Rule 5     select_stam -> SELECT attr_list cond_stam
Rule 6     insert_stam -> INSERT attr_list VALUES values_list
Rule 7     update_stam -> UPDATE SET assg_stam cond_stam
Rule 8     delete_stam -> DELETE cond_stam
Rule 9     attr_list -> attr COMMA attr_list
Rule 10    attr_list -> attr
Rule 11    attr_list -> STAR
Rule 12    attr_list -> empty
Rule 13    attr -> STR
Rule 14    cond_stam -> WHERE or_cond
Rule 15    cond_stam -> empty
Rule 16    or_cond -> and_cond OR or_cond
Rule 17    or_cond -> and_cond
Rule 18    and_cond -> cond AND and_cond
Rule 19    and_cond -> cond
Rule 20    cond -> attr pred value
Rule 21    pred -> EQ
Rule 22    pred -> NE
Rule 23    pred -> LT
Rule 24    pred -> LE
Rule 25    pred -> GT
Rule 26    pred -> GE
Rule 27    pred -> LIKE
Rule 28    values_list -> value COMMA values_list
Rule 29    values_list -> value
Rule 30    value -> STR
Rule 31    value -> NUMBER
Rule 32    value -> BOOL
Rule 33    assg_stam -> assg COMMA assg_stam
Rule 34    assg_stam -> assg
Rule 35    assg -> attr EQ value
Rule 36    empty -> <empty>

Terminals, with rules where they appear

AND                  : 18
BOOL                 : 32
COMMA                : 9 28 33
DELETE               : 8
EQ                   : 21 35
GE                   : 26
GT                   : 25
INSERT               : 6
KEYWORD              : 
LE                   : 24
LIKE                 : 27
LT                   : 23
NE                   : 22
NUMBER               : 31
OR                   : 16
SELECT               : 5
SET                  : 7
STAR                 : 11
STR                  : 13 30
UPDATE               : 7
VALUES               : 6
WHERE                : 14
error                : 

Nonterminals, with rules where they appear

and_cond             : 16 17 18
assg                 : 33 34
assg_stam            : 7 33
attr                 : 9 10 20 35
attr_list            : 5 6 9
cond                 : 18 19
cond_stam            : 5 7 8
delete_stam          : 4
empty                : 12 15
insert_stam          : 2
or_cond              : 14 16
pred                 : 20
select_stam          : 1
sql_stam             : 0
update_stam          : 3
value                : 20 28 29 35
values_list          : 6 28

Parsing method: LALR

state 0

    (0) S' -> . sql_stam
    (1) sql_stam -> . select_stam
    (2) sql_stam -> . insert_stam
    (3) sql_stam -> . update_stam
    (4) sql_stam -> . delete_stam
    (5) select_stam -> . SELECT attr_list cond_stam
    (6) insert_stam -> . INSERT attr_list VALUES values_list
    (7) update_stam -> . UPDATE SET assg_stam cond_stam
    (8) delete_stam -> . DELETE cond_stam

    SELECT          shift and go to state 6
    INSERT          shift and go to state 7
    UPDATE          shift and go to state 8
    DELETE          shift and go to state 9

    sql_stam                       shift and go to state 1
    select_stam                    shift and go to state 2
    insert_stam                    shift and go to state 3
    update_stam                    shift and go to state 4
    delete_stam                    shift and go to state 5

state 1

    (0) S' -> sql_stam .



state 2

    (1) sql_stam -> select_stam .

    $end            reduce using rule 1 (sql_stam -> select_stam .)


state 3

    (2) sql_stam -> insert_stam .

    $end            reduce using rule 2 (sql_stam -> insert_stam .)


state 4

    (3) sql_stam -> update_stam .

    $end            reduce using rule 3 (sql_stam -> update_stam .)


state 5

    (4) sql_stam -> delete_stam .

    $end            reduce using rule 4 (sql_stam -> delete_stam .)


state 6

    (5) select_stam -> SELECT . attr_list cond_stam
    (9) attr_list -> . attr COMMA attr_list
    (10) attr_list -> . attr
    (11) attr_list -> . STAR
    (12) attr_list -> . empty
    (13) attr -> . STR
    (36) empty -> .

    STAR            shift and go to state 12
    STR             shift and go to state 14
    WHERE           reduce using rule 36 (empty -> .)
    $end            reduce using rule 36 (empty -> .)

    attr_list                      shift and go to state 10
    attr                           shift and go to state 11
    empty                          shift and go to state 13

state 7

    (6) insert_stam -> INSERT . attr_list VALUES values_list
    (9) attr_list -> . attr COMMA attr_list
    (10) attr_list -> . attr
    (11) attr_list -> . STAR
    (12) attr_list -> . empty
    (13) attr -> . STR
    (36) empty -> .

    STAR            shift and go to state 12
    STR             shift and go to state 14
    VALUES          reduce using rule 36 (empty -> .)

    attr_list                      shift and go to state 15
    attr                           shift and go to state 11
    empty                          shift and go to state 13

state 8

    (7) update_stam -> UPDATE . SET assg_stam cond_stam

    SET             shift and go to state 16


state 9

    (8) delete_stam -> DELETE . cond_stam
    (14) cond_stam -> . WHERE or_cond
    (15) cond_stam -> . empty
    (36) empty -> .

    WHERE           shift and go to state 18
    $end            reduce using rule 36 (empty -> .)

    cond_stam                      shift and go to state 17
    empty                          shift and go to state 19

state 10

    (5) select_stam -> SELECT attr_list . cond_stam
    (14) cond_stam -> . WHERE or_cond
    (15) cond_stam -> . empty
    (36) empty -> .

    WHERE           shift and go to state 18
    $end            reduce using rule 36 (empty -> .)

    cond_stam                      shift and go to state 20
    empty                          shift and go to state 19

state 11

    (9) attr_list -> attr . COMMA attr_list
    (10) attr_list -> attr .

    COMMA           shift and go to state 21
    WHERE           reduce using rule 10 (attr_list -> attr .)
    $end            reduce using rule 10 (attr_list -> attr .)
    VALUES          reduce using rule 10 (attr_list -> attr .)


state 12

    (11) attr_list -> STAR .

    WHERE           reduce using rule 11 (attr_list -> STAR .)
    $end            reduce using rule 11 (attr_list -> STAR .)
    VALUES          reduce using rule 11 (attr_list -> STAR .)


state 13

    (12) attr_list -> empty .

    WHERE           reduce using rule 12 (attr_list -> empty .)
    $end            reduce using rule 12 (attr_list -> empty .)
    VALUES          reduce using rule 12 (attr_list -> empty .)


state 14

    (13) attr -> STR .

    COMMA           reduce using rule 13 (attr -> STR .)
    WHERE           reduce using rule 13 (attr -> STR .)
    $end            reduce using rule 13 (attr -> STR .)
    VALUES          reduce using rule 13 (attr -> STR .)
    EQ              reduce using rule 13 (attr -> STR .)
    NE              reduce using rule 13 (attr -> STR .)
    LT              reduce using rule 13 (attr -> STR .)
    LE              reduce using rule 13 (attr -> STR .)
    GT              reduce using rule 13 (attr -> STR .)
    GE              reduce using rule 13 (attr -> STR .)
    LIKE            reduce using rule 13 (attr -> STR .)


state 15

    (6) insert_stam -> INSERT attr_list . VALUES values_list

    VALUES          shift and go to state 22


state 16

    (7) update_stam -> UPDATE SET . assg_stam cond_stam
    (33) assg_stam -> . assg COMMA assg_stam
    (34) assg_stam -> . assg
    (35) assg -> . attr EQ value
    (13) attr -> . STR

    STR             shift and go to state 14

    assg_stam                      shift and go to state 23
    assg                           shift and go to state 24
    attr                           shift and go to state 25

state 17

    (8) delete_stam -> DELETE cond_stam .

    $end            reduce using rule 8 (delete_stam -> DELETE cond_stam .)


state 18

    (14) cond_stam -> WHERE . or_cond
    (16) or_cond -> . and_cond OR or_cond
    (17) or_cond -> . and_cond
    (18) and_cond -> . cond AND and_cond
    (19) and_cond -> . cond
    (20) cond -> . attr pred value
    (13) attr -> . STR

    STR             shift and go to state 14

    or_cond                        shift and go to state 26
    and_cond                       shift and go to state 27
    cond                           shift and go to state 28
    attr                           shift and go to state 29

state 19

    (15) cond_stam -> empty .

    $end            reduce using rule 15 (cond_stam -> empty .)


state 20

    (5) select_stam -> SELECT attr_list cond_stam .

    $end            reduce using rule 5 (select_stam -> SELECT attr_list cond_stam .)


state 21

    (9) attr_list -> attr COMMA . attr_list
    (9) attr_list -> . attr COMMA attr_list
    (10) attr_list -> . attr
    (11) attr_list -> . STAR
    (12) attr_list -> . empty
    (13) attr -> . STR
    (36) empty -> .

    STAR            shift and go to state 12
    STR             shift and go to state 14
    WHERE           reduce using rule 36 (empty -> .)
    $end            reduce using rule 36 (empty -> .)
    VALUES          reduce using rule 36 (empty -> .)

    attr                           shift and go to state 11
    attr_list                      shift and go to state 30
    empty                          shift and go to state 13

state 22

    (6) insert_stam -> INSERT attr_list VALUES . values_list
    (28) values_list -> . value COMMA values_list
    (29) values_list -> . value
    (30) value -> . STR
    (31) value -> . NUMBER
    (32) value -> . BOOL

    STR             shift and go to state 33
    NUMBER          shift and go to state 34
    BOOL            shift and go to state 35

    values_list                    shift and go to state 31
    value                          shift and go to state 32

state 23

    (7) update_stam -> UPDATE SET assg_stam . cond_stam
    (14) cond_stam -> . WHERE or_cond
    (15) cond_stam -> . empty
    (36) empty -> .

    WHERE           shift and go to state 18
    $end            reduce using rule 36 (empty -> .)

    cond_stam                      shift and go to state 36
    empty                          shift and go to state 19

state 24

    (33) assg_stam -> assg . COMMA assg_stam
    (34) assg_stam -> assg .

    COMMA           shift and go to state 37
    WHERE           reduce using rule 34 (assg_stam -> assg .)
    $end            reduce using rule 34 (assg_stam -> assg .)


state 25

    (35) assg -> attr . EQ value

    EQ              shift and go to state 38


state 26

    (14) cond_stam -> WHERE or_cond .

    $end            reduce using rule 14 (cond_stam -> WHERE or_cond .)


state 27

    (16) or_cond -> and_cond . OR or_cond
    (17) or_cond -> and_cond .

    OR              shift and go to state 39
    $end            reduce using rule 17 (or_cond -> and_cond .)


state 28

    (18) and_cond -> cond . AND and_cond
    (19) and_cond -> cond .

    AND             shift and go to state 40
    OR              reduce using rule 19 (and_cond -> cond .)
    $end            reduce using rule 19 (and_cond -> cond .)


state 29

    (20) cond -> attr . pred value
    (21) pred -> . EQ
    (22) pred -> . NE
    (23) pred -> . LT
    (24) pred -> . LE
    (25) pred -> . GT
    (26) pred -> . GE
    (27) pred -> . LIKE

    EQ              shift and go to state 42
    NE              shift and go to state 43
    LT              shift and go to state 44
    LE              shift and go to state 45
    GT              shift and go to state 46
    GE              shift and go to state 47
    LIKE            shift and go to state 48

    pred                           shift and go to state 41

state 30

    (9) attr_list -> attr COMMA attr_list .

    WHERE           reduce using rule 9 (attr_list -> attr COMMA attr_list .)
    $end            reduce using rule 9 (attr_list -> attr COMMA attr_list .)
    VALUES          reduce using rule 9 (attr_list -> attr COMMA attr_list .)


state 31

    (6) insert_stam -> INSERT attr_list VALUES values_list .

    $end            reduce using rule 6 (insert_stam -> INSERT attr_list VALUES values_list .)


state 32

    (28) values_list -> value . COMMA values_list
    (29) values_list -> value .

    COMMA           shift and go to state 49
    $end            reduce using rule 29 (values_list -> value .)


state 33

    (30) value -> STR .

    COMMA           reduce using rule 30 (value -> STR .)
    $end            reduce using rule 30 (value -> STR .)
    WHERE           reduce using rule 30 (value -> STR .)
    AND             reduce using rule 30 (value -> STR .)
    OR              reduce using rule 30 (value -> STR .)


state 34

    (31) value -> NUMBER .

    COMMA           reduce using rule 31 (value -> NUMBER .)
    $end            reduce using rule 31 (value -> NUMBER .)
    WHERE           reduce using rule 31 (value -> NUMBER .)
    AND             reduce using rule 31 (value -> NUMBER .)
    OR              reduce using rule 31 (value -> NUMBER .)


state 35

    (32) value -> BOOL .

    COMMA           reduce using rule 32 (value -> BOOL .)
    $end            reduce using rule 32 (value -> BOOL .)
    WHERE           reduce using rule 32 (value -> BOOL .)
    AND             reduce using rule 32 (value -> BOOL .)
    OR              reduce using rule 32 (value -> BOOL .)


state 36

    (7) update_stam -> UPDATE SET assg_stam cond_stam .

    $end            reduce using rule 7 (update_stam -> UPDATE SET assg_stam cond_stam .)


state 37

    (33) assg_stam -> assg COMMA . assg_stam
    (33) assg_stam -> . assg COMMA assg_stam
    (34) assg_stam -> . assg
    (35) assg -> . attr EQ value
    (13) attr -> . STR

    STR             shift and go to state 14

    assg                           shift and go to state 24
    assg_stam                      shift and go to state 50
    attr                           shift and go to state 25

state 38

    (35) assg -> attr EQ . value
    (30) value -> . STR
    (31) value -> . NUMBER
    (32) value -> . BOOL

    STR             shift and go to state 33
    NUMBER          shift and go to state 34
    BOOL            shift and go to state 35

    value                          shift and go to state 51

state 39

    (16) or_cond -> and_cond OR . or_cond
    (16) or_cond -> . and_cond OR or_cond
    (17) or_cond -> . and_cond
    (18) and_cond -> . cond AND and_cond
    (19) and_cond -> . cond
    (20) cond -> . attr pred value
    (13) attr -> . STR

    STR             shift and go to state 14

    and_cond                       shift and go to state 27
    or_cond                        shift and go to state 52
    cond                           shift and go to state 28
    attr                           shift and go to state 29

state 40

    (18) and_cond -> cond AND . and_cond
    (18) and_cond -> . cond AND and_cond
    (19) and_cond -> . cond
    (20) cond -> . attr pred value
    (13) attr -> . STR

    STR             shift and go to state 14

    cond                           shift and go to state 28
    and_cond                       shift and go to state 53
    attr                           shift and go to state 29

state 41

    (20) cond -> attr pred . value
    (30) value -> . STR
    (31) value -> . NUMBER
    (32) value -> . BOOL

    STR             shift and go to state 33
    NUMBER          shift and go to state 34
    BOOL            shift and go to state 35

    value                          shift and go to state 54

state 42

    (21) pred -> EQ .

    STR             reduce using rule 21 (pred -> EQ .)
    NUMBER          reduce using rule 21 (pred -> EQ .)
    BOOL            reduce using rule 21 (pred -> EQ .)


state 43

    (22) pred -> NE .

    STR             reduce using rule 22 (pred -> NE .)
    NUMBER          reduce using rule 22 (pred -> NE .)
    BOOL            reduce using rule 22 (pred -> NE .)


state 44

    (23) pred -> LT .

    STR             reduce using rule 23 (pred -> LT .)
    NUMBER          reduce using rule 23 (pred -> LT .)
    BOOL            reduce using rule 23 (pred -> LT .)


state 45

    (24) pred -> LE .

    STR             reduce using rule 24 (pred -> LE .)
    NUMBER          reduce using rule 24 (pred -> LE .)
    BOOL            reduce using rule 24 (pred -> LE .)


state 46

    (25) pred -> GT .

    STR             reduce using rule 25 (pred -> GT .)
    NUMBER          reduce using rule 25 (pred -> GT .)
    BOOL            reduce using rule 25 (pred -> GT .)


state 47

    (26) pred -> GE .

    STR             reduce using rule 26 (pred -> GE .)
    NUMBER          reduce using rule 26 (pred -> GE .)
    BOOL            reduce using rule 26 (pred -> GE .)


state 48

    (27) pred -> LIKE .

    STR             reduce using rule 27 (pred -> LIKE .)
    NUMBER          reduce using rule 27 (pred -> LIKE .)
    BOOL            reduce using rule 27 (pred -> LIKE .)


state 49

    (28) values_list -> value COMMA . values_list
    (28) values_list -> . value COMMA values_list
    (29) values_list -> . value
    (30) value -> . STR
    (31) value -> . NUMBER
    (32) value -> . BOOL

    STR             shift and go to state 33
    NUMBER          shift and go to state 34
    BOOL            shift and go to state 35

    value                          shift and go to state 32
    values_list                    shift and go to state 55

state 50

    (33) assg_stam -> assg COMMA assg_stam .

    WHERE           reduce using rule 33 (assg_stam -> assg COMMA assg_stam .)
    $end            reduce using rule 33 (assg_stam -> assg COMMA assg_stam .)


state 51

    (35) assg -> attr EQ value .

    COMMA           reduce using rule 35 (assg -> attr EQ value .)
    WHERE           reduce using rule 35 (assg -> attr EQ value .)
    $end            reduce using rule 35 (assg -> attr EQ value .)


state 52

    (16) or_cond -> and_cond OR or_cond .

    $end            reduce using rule 16 (or_cond -> and_cond OR or_cond .)


state 53

    (18) and_cond -> cond AND and_cond .

    OR              reduce using rule 18 (and_cond -> cond AND and_cond .)
    $end            reduce using rule 18 (and_cond -> cond AND and_cond .)


state 54

    (20) cond -> attr pred value .

    AND             reduce using rule 20 (cond -> attr pred value .)
    OR              reduce using rule 20 (cond -> attr pred value .)
    $end            reduce using rule 20 (cond -> attr pred value .)


state 55

    (28) values_list -> value COMMA values_list .

    $end            reduce using rule 28 (values_list -> value COMMA values_list .)

